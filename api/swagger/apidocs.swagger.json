{
  "swagger": "2.0",
  "info": {
    "title": "Auth Gateway API Specification",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "MyAccount"
    },
    {
      "name": "Customer"
    },
    {
      "name": "MyTenant"
    },
    {
      "name": "OrgUnit"
    },
    {
      "name": "OrgUnitRole"
    },
    {
      "name": "OrgUnitUser"
    },
    {
      "name": "Registration"
    },
    {
      "name": "ResourceDefinition"
    },
    {
      "name": "Tenant"
    },
    {
      "name": "TenantUser"
    },
    {
      "name": "User"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/v1/customer": {
      "post": {
        "summary": "Add new customer",
        "operationId": "Customer_AddCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCustomerAddResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCustomerAddReq"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/api/auth/v1/customer/{id}": {
      "get": {
        "summary": "get an existing customer details",
        "operationId": "Customer_GetCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCustomerGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of the customer",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ]
      },
      "delete": {
        "summary": "delete an existing customer",
        "operationId": "Customer_DeleteCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCustomerDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "customer id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ]
      },
      "put": {
        "summary": "Update an existing customer details",
        "operationId": "Customer_UpdateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCustomerUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of the customer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateCustomerBody"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/api/auth/v1/customers": {
      "get": {
        "summary": "Get List of existing customers",
        "operationId": "Customer_ListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCustomersListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "offset from where to start the list of customers",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the response to specified count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/api/auth/v1/ou/{ou}/roles": {
      "get": {
        "summary": "Get List of available org unit roles, for specifc orgranisation",
        "operationId": "OrgUnitRole_ListOrgUnitRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitRolesListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ou",
            "description": "org unit under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgUnitRole"
        ]
      }
    },
    "/api/auth/v1/ou/{ou}/user": {
      "post": {
        "summary": "Add user to the org unit",
        "operationId": "OrgUnitUser_AddOrgUnitUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitUserAddResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ou",
            "description": "org unit under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUnitUserAddOrgUnitUserBody"
            }
          }
        ],
        "tags": [
          "OrgUnitUser"
        ]
      }
    },
    "/api/auth/v1/ou/{ou}/user/{user}": {
      "delete": {
        "summary": "delete user role to the org unit",
        "operationId": "OrgUnitUser_DeleteOrgUnitUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitUserDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ou",
            "description": "org unit under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "username to delete",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgUnitUser"
        ]
      },
      "put": {
        "summary": "Update user role to the org unit",
        "operationId": "OrgUnitUser_UpdateOrgUnitUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitUserUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ou",
            "description": "org unit under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "user name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUnitUserUpdateOrgUnitUserBody"
            }
          }
        ],
        "tags": [
          "OrgUnitUser"
        ]
      }
    },
    "/api/auth/v1/ou/{ou}/users": {
      "get": {
        "summary": "Get List of available org unit users",
        "operationId": "OrgUnitUser_ListOrgUnitUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitUsersListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ou",
            "description": "org unit under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset to start from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the number of entries in the response",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OrgUnitUser"
        ]
      }
    },
    "/api/auth/v1/resources": {
      "get": {
        "summary": "Get Resource definitions along with available actions",
        "operationId": "ResourceDefinition_GetResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiResourceGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ResourceDefinition"
        ]
      }
    },
    "/api/auth/v1/tenant": {
      "post": {
        "summary": "Create a new Tenant",
        "operationId": "Tenant_CreateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantCreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiTenantCreateReq"
            }
          }
        ],
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/auth/v1/tenant/{id}": {
      "get": {
        "summary": "Get details of existing tenants",
        "operationId": "Tenant_GetTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "tenant id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/sessions": {
      "get": {
        "summary": "List Active sessions, filter by user if provided",
        "operationId": "TenantUser_ListUserSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserSessionsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user name to filter for",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset to start from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user": {
      "post": {
        "summary": "Create a new user for the given tenant",
        "operationId": "TenantUser_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserCreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under which this user will be created",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiTenantUserCreateUserBody"
            }
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user/{username}": {
      "get": {
        "summary": "Get an existing user for the given tenant",
        "operationId": "TenantUser_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under which this action needs to be taken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user id which needs to be deleted",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      },
      "delete": {
        "summary": "Delete an existing user for the given tenant",
        "operationId": "TenantUser_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under which this action needs to be taken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user id which needs to be deleted",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      },
      "put": {
        "summary": "Update an existing user for the given tenant",
        "operationId": "TenantUser_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under which this user will be created",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "email address of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "first name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "last name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disabled",
            "description": "if the user needs to be created disabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user/{username}/disable": {
      "post": {
        "summary": "Disable an existing enabled user for the given tenant",
        "operationId": "TenantUser_DisableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserDisableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user that needs to be disabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user/{username}/enable": {
      "post": {
        "summary": "Enable an existing disabled user for the given tenant",
        "operationId": "TenantUser_EnableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserEnableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user that needs to be enabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user/{username}/logout": {
      "post": {
        "summary": "logout user from specific session or all sessions",
        "operationId": "TenantUser_LogoutUserSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserSessionLogoutResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "user to be logged out",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiTenantUserLogoutUserSessionBody"
            }
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/user/{username}/ous": {
      "get": {
        "summary": "List org units where a specific user has roles (ops admin cross-tenant access)",
        "operationId": "TenantUser_ListTenantUserOrgUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUserOrgUnitsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant id to get org units and roles for",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "username to get org units and roles for",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset from where to start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the number of entries in the response",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenant/{tenant}/users": {
      "get": {
        "summary": "Get List of existing users in a tenant",
        "operationId": "TenantUser_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantUsersListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "tenant under which the user list is requested",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset from where to start the list of users",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the response to specified count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "prefix match to consider",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TenantUser"
        ]
      }
    },
    "/api/auth/v1/tenants": {
      "get": {
        "summary": "Get List of existing tenants",
        "operationId": "Tenant_ListTenants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTenantsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "offset from where to start the list of tenants",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the response to specified count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/myaccount/v1/api-key": {
      "post": {
        "summary": "create a new api key for api access",
        "operationId": "MyAccount_CreateApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiKeyCreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiApiKeyCreateReq"
            }
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/api-key/{id}": {
      "delete": {
        "summary": "delete an existing api key",
        "operationId": "MyAccount_DeleteApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiKeyDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "key id that needs to be deleted",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/api-key/{id}/disable": {
      "post": {
        "summary": "disabling an existing enabled api key, not action is performed\nif the key is already disabled",
        "operationId": "MyAccount_DisableApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiKeyDisableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "key id that needs to be disabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/api-key/{id}/enable": {
      "post": {
        "summary": "enabling an existing disabled api key, not action is performed\nif the key is already enabled",
        "operationId": "MyAccount_EnableApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiKeyEnableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "key id that needs to be enabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/api-keys": {
      "get": {
        "summary": "list all available api keys for the user",
        "operationId": "MyAccount_ListApiKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiKeysListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/info": {
      "get": {
        "summary": "get my account info",
        "operationId": "MyAccount_GetMyInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyInfoGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/logout-sessions": {
      "post": {
        "summary": "logout my active session(/s), if a specific session id is\nnot provided, it will logout all sessions except the current one",
        "operationId": "MyAccount_LogoutMySessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMySessionsLogoutResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiMySessionsLogoutReq"
            }
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/org-unit/{id}/default": {
      "post": {
        "summary": "set specific Org unit as default access on login\nrelevant only when working with multiple org units",
        "operationId": "MyAccount_SetDefaultOrgUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiDefaultOrgUnitResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of the Org Unit to be set as default",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/org-units": {
      "get": {
        "summary": "list all Org units available for me",
        "operationId": "MyAccount_ListMyOrgUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyOrgUnitsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/region/{region}/azs": {
      "get": {
        "summary": "Get List of availability zones in a given region for the user",
        "operationId": "MyAccount_ListMyAzs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyAzsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "region",
            "description": "region under consideration",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/regions": {
      "get": {
        "summary": "Get List of available regions for user to work with",
        "operationId": "MyAccount_ListMyRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyRegionsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/myaccount/v1/sessions": {
      "get": {
        "summary": "get all my active sessions",
        "operationId": "MyAccount_GetMySessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMySessionsGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyAccount"
        ]
      }
    },
    "/api/mytenant/v1/keycloak-session-limits": {
      "get": {
        "summary": "Get Keycloak session limits configuration instructions",
        "operationId": "MyTenant_GetKeycloakSessionLimitsInstructions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetKeycloakSessionLimitsInstructionsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.maxConcurrentSessions",
            "description": "maximum number of concurrent sessions per user",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "config.behaviorWhenLimitExceeded",
            "description": "behavior when limit is exceeded\n\n - DENY: deny new session (reject login)\n - TERMINATE: terminate oldest session to allow new login",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DENY",
              "TERMINATE"
            ],
            "default": "DENY"
          }
        ],
        "tags": [
          "MyTenant"
        ]
      },
      "put": {
        "summary": "Configure session limits in Keycloak realm (preparation step)",
        "operationId": "MyTenant_ConfigureKeycloakSessionLimits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiConfigureKeycloakSessionLimitsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiConfigureKeycloakSessionLimitsReq"
            }
          }
        ],
        "tags": [
          "MyTenant"
        ]
      }
    },
    "/api/mytenant/v1/ou": {
      "post": {
        "summary": "Create new org unit for my tenant",
        "operationId": "OrgUnit_CreateOrgUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitCreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrgUnitCreateReq"
            }
          }
        ],
        "tags": [
          "OrgUnit"
        ]
      }
    },
    "/api/mytenant/v1/ou/{id}": {
      "get": {
        "summary": "get an existing org unit for my tenant",
        "operationId": "OrgUnit_GetOrgUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of the org unit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgUnit"
        ]
      },
      "delete": {
        "summary": "delete an existing org unit for my tenant",
        "operationId": "OrgUnit_DeleteOrgUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "org unit id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgUnit"
        ]
      },
      "put": {
        "summary": "Update an existing org unit for my tenant",
        "operationId": "OrgUnit_UpdateOrgUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of the org unit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUnitUpdateOrgUnitBody"
            }
          }
        ],
        "tags": [
          "OrgUnit"
        ]
      }
    },
    "/api/mytenant/v1/ous": {
      "get": {
        "summary": "Get List of existing org units in my tenant",
        "operationId": "OrgUnit_ListOrgUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrgUnitsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "offset from where to start the list of org units",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the response to specified count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OrgUnit"
        ]
      }
    },
    "/api/mytenant/v1/password-policy": {
      "get": {
        "summary": "Get Password policy configuration",
        "operationId": "MyTenant_GetMyPasswordPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyPasswordPolicyGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "MyTenant"
        ]
      },
      "put": {
        "summary": "Update Password policy configuration",
        "operationId": "MyTenant_UpdateMyPasswordPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyPasswordPolicyUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiMyPasswordPolicyUpdateReq"
            }
          }
        ],
        "tags": [
          "MyTenant"
        ]
      }
    },
    "/api/mytenant/v1/sessions": {
      "get": {
        "summary": "List Active sessions, filter by user if provided",
        "operationId": "User_ListUserSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserSessionsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user name to filter for",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset to start from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user": {
      "post": {
        "summary": "Create a new user for the given tenant",
        "operationId": "User_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserCreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUserCreateReq"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user/{username}": {
      "get": {
        "summary": "Get an existing user for the given tenant",
        "operationId": "User_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserGetResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user id which needs to be deleted",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete an existing user for the given tenant",
        "operationId": "User_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserDeleteResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user id which needs to be deleted",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update an existing user for the given tenant",
        "operationId": "User_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserUpdateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "email address of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "first name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "last name of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disabled",
            "description": "if the user needs to be created disabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user/{username}/disable": {
      "post": {
        "summary": "Disable an existing enabled user for the given tenant",
        "operationId": "User_DisableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserDisableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user that needs to be disabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user/{username}/enable": {
      "post": {
        "summary": "Enable an existing disabled user for the given tenant",
        "operationId": "User_EnableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserEnableResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user that needs to be enabled",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user/{username}/logout": {
      "post": {
        "summary": "logout user from specific session or all sessions",
        "operationId": "User_LogoutUserSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserSessionLogoutResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "user to be logged out",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUserLogoutUserSessionBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/user/{username}/ous": {
      "get": {
        "summary": "List org units where a specific user has roles (tenant admin within-tenant access)",
        "operationId": "User_ListUserOrgUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserOrgUnitsListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "username parameter from the URL path",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "offset from where to start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the number of entries in the response",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/mytenant/v1/users": {
      "get": {
        "summary": "Get List of existing users in a tenant",
        "operationId": "User_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUsersListResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "offset from where to start the list of users",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "limit the response to specified count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "prefix match to consider",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/register/v1/otp": {
      "post": {
        "summary": "Public API for someone to request OTP on email for registration, verifying email",
        "operationId": "Registration_GetRegisterOtp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRegisterOtpResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiRegisterOtpReq"
            }
          }
        ],
        "tags": [
          "Registration"
        ]
      }
    }
  },
  "definitions": {
    "CustomerDefsTenancy": {
      "type": "string",
      "enum": [
        "Dedicated",
        "Shared"
      ],
      "default": "Dedicated",
      "title": "- Dedicated: dedicated tenancy customer\ntypically assigned for Orgs requiring user management\nwith custom SSO integrations, requiring extra security\ncontrols\n - Shared: Shared tenancy customer\ntypically assigned for individuals or group of\nindividuals, where users can authenticate using public\nSSO and authz can be managed by admins"
    },
    "CustomerUpdateCustomerBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "display name for the customer"
        },
        "desc": {
          "type": "string",
          "title": "customer description"
        }
      },
      "title": "request for update of an existing customer"
    },
    "OrgUnitUpdateOrgUnitBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "display name for the org unit"
        },
        "desc": {
          "type": "string",
          "title": "org unit description"
        }
      },
      "title": "request for update of an existing org unit"
    },
    "OrgUnitUserAddOrgUnitUserBody": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "user name"
        },
        "role": {
          "type": "string",
          "title": "org unit role"
        }
      },
      "title": "org unit user role add request"
    },
    "OrgUnitUserUpdateOrgUnitUserBody": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "title": "org unit role"
        }
      },
      "title": "org unit user role update request"
    },
    "apiApiKeyCreateReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "key id will be allocated by virtue of key creation\nuser is expected to provide an optional name for\nease of reference, it is recommended to be unique\nbut not validated or ensured to be unique"
        },
        "validity": {
          "type": "string",
          "format": "int64",
          "title": "validity of the api key, tenure in seconds for\nwhich this api key is being created\nwhen not set or 0 it means key with no expiry"
        }
      }
    },
    "apiApiKeyCreateResp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the api key provided by the creator"
        },
        "id": {
          "type": "string",
          "title": "ID of the access key that will be used by the\nclient and server to identify ApiKey in use"
        },
        "status": {
          "$ref": "#/definitions/apiApiKeyDefStatus",
          "title": "current status of the Api Key"
        },
        "lastUsed": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key was used last time"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key was created"
        },
        "expireAt": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key will expire"
        },
        "secret": {
          "type": "string",
          "title": "Secret to be used in conjunction with key id\nfor authentication of client using the api key\nbut typically the auth mechanism used will not\nexpect to share this secret ever on the wire\nafter it is being created, neither on APIs nor\nfor authentication"
        }
      }
    },
    "apiApiKeyDefStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Expired",
        "Disabled"
      ],
      "default": "Active",
      "title": "- Active: ApiKey is active\n - Expired: ApiKey has expired\n - Disabled: ApiKey is disabled"
    },
    "apiApiKeyDeleteResp": {
      "type": "object"
    },
    "apiApiKeyDisableResp": {
      "type": "object"
    },
    "apiApiKeyEnableResp": {
      "type": "object"
    },
    "apiApiKeyListEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the api key provided by the creator"
        },
        "id": {
          "type": "string",
          "title": "ID of the access key that will be used by the\nclient and server to identify ApiKey in use"
        },
        "status": {
          "$ref": "#/definitions/apiApiKeyDefStatus",
          "title": "current status of the Api Key"
        },
        "lastUsed": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key was used last time"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key was created"
        },
        "expireAt": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the api key will expire"
        }
      }
    },
    "apiApiKeysListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiApiKeyListEntry"
          }
        }
      }
    },
    "apiConfigureKeycloakSessionLimitsReq": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/apiKeycloakSessionLimitsConfig",
          "title": "session limits configuration"
        }
      },
      "title": "configure Keycloak session limits request"
    },
    "apiConfigureKeycloakSessionLimitsResp": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "success message"
        },
        "instructions": {
          "type": "string",
          "title": "manual configuration instructions"
        }
      },
      "title": "configure Keycloak session limits response"
    },
    "apiCustomerAddReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "display name for the customer"
        },
        "desc": {
          "type": "string",
          "title": "customer description"
        },
        "tenancy": {
          "$ref": "#/definitions/CustomerDefsTenancy",
          "title": "customer tenancy type, cannot be changed\nonce created"
        }
      },
      "title": "request for addition of new customer"
    },
    "apiCustomerAddResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the customer created"
        }
      },
      "title": "response for addition of new customer"
    },
    "apiCustomerDeleteResp": {
      "type": "object"
    },
    "apiCustomerGetResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "customer id"
        },
        "name": {
          "type": "string",
          "title": "customer display name"
        },
        "desc": {
          "type": "string",
          "title": "customer description"
        },
        "createdBy": {
          "type": "string",
          "title": "created by"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "create time"
        },
        "tenancy": {
          "$ref": "#/definitions/CustomerDefsTenancy",
          "title": "customer tenancy type"
        }
      }
    },
    "apiCustomerUpdateResp": {
      "type": "object"
    },
    "apiCustomersListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "customer id"
        },
        "name": {
          "type": "string",
          "title": "customer display name"
        },
        "desc": {
          "type": "string",
          "title": "customer description"
        },
        "tenancy": {
          "$ref": "#/definitions/CustomerDefsTenancy",
          "title": "customer tenancy type"
        }
      }
    },
    "apiCustomersListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "count of customers available"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiCustomersListEntry"
          },
          "title": "list of customer info in response"
        }
      },
      "title": "list customers response"
    },
    "apiDefaultOrgUnitResp": {
      "type": "object"
    },
    "apiGetKeycloakSessionLimitsInstructionsResp": {
      "type": "object",
      "properties": {
        "instructions": {
          "type": "string",
          "title": "step-by-step instructions for manual configuration"
        },
        "realm": {
          "type": "string",
          "title": "current realm name"
        }
      },
      "title": "get Keycloak session limits instructions response"
    },
    "apiKeycloakSessionLimitsConfig": {
      "type": "object",
      "properties": {
        "maxConcurrentSessions": {
          "type": "integer",
          "format": "int32",
          "title": "maximum number of concurrent sessions per user"
        },
        "behaviorWhenLimitExceeded": {
          "$ref": "#/definitions/apiSessionLimitBehavior",
          "title": "behavior when limit is exceeded"
        }
      },
      "title": "Keycloak session limits configuration"
    },
    "apiMyAzsListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "identifier of the availability zone"
        },
        "name": {
          "type": "string",
          "title": "name of the availability zone"
        }
      }
    },
    "apiMyAzsListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMyAzsListEntry"
          },
          "title": "list of available azs for the tenant\nunder a region"
        }
      }
    },
    "apiMyInfoGetResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username which is used for login"
        },
        "firstName": {
          "type": "string",
          "title": "first name of the user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the user"
        },
        "email": {
          "type": "string",
          "title": "email of the user"
        }
      }
    },
    "apiMyOrgUnitEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "org unit id"
        },
        "name": {
          "type": "string",
          "title": "org unit display name"
        }
      }
    },
    "apiMyOrgUnitsListResp": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/apiMyOrgUnitEntry",
          "title": "default Org Unit for the user"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMyOrgUnitEntry"
          },
          "title": "list of available org units for user\ninclusive of default Org unit"
        }
      }
    },
    "apiMyPasswordPolicyGetResp": {
      "type": "object",
      "properties": {
        "minLower": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of lower case characters in password"
        },
        "minUpper": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of upper case characters in password"
        },
        "minDigits": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of digits in password"
        },
        "minSpecial": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of special characters in password"
        },
        "minLength": {
          "type": "integer",
          "format": "int32",
          "title": "minimum length of password"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32",
          "title": "maximum length of password"
        },
        "recentlyUsed": {
          "type": "integer",
          "format": "int32",
          "title": "do not allow last x recently used passwords"
        },
        "passwordAge": {
          "type": "integer",
          "format": "int32",
          "title": "do not allow password reuse before x days"
        },
        "forceExpirePasswordChange": {
          "type": "integer",
          "format": "int32",
          "title": "expire password after x days, trigger force change"
        }
      },
      "title": "password policy get response"
    },
    "apiMyPasswordPolicyUpdateReq": {
      "type": "object",
      "properties": {
        "minLower": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of lower case characters in password"
        },
        "minUpper": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of upper case characters in password"
        },
        "minDigits": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of digits in password"
        },
        "minSpecial": {
          "type": "integer",
          "format": "int32",
          "title": "minimum number of special characters in password"
        },
        "minLength": {
          "type": "integer",
          "format": "int32",
          "title": "minimum length of password"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32",
          "title": "maximum length of password"
        },
        "recentlyUsed": {
          "type": "integer",
          "format": "int32",
          "title": "do not allow last x recently used passwords"
        },
        "passwordAge": {
          "type": "integer",
          "format": "int32",
          "title": "do not allow password reuse before x days"
        },
        "forceExpirePasswordChange": {
          "type": "integer",
          "format": "int32",
          "title": "expire password after x days, trigger force change"
        }
      },
      "title": "password policy update request"
    },
    "apiMyPasswordPolicyUpdateResp": {
      "type": "object",
      "title": "password policy update response"
    },
    "apiMyRegionsListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "identifier of the region"
        },
        "name": {
          "type": "string",
          "title": "name of the region typically unique for tenant"
        }
      }
    },
    "apiMyRegionsListResp": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/apiMyRegionsListEntry",
          "title": "default region for the user"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMyRegionsListEntry"
          },
          "title": "list of available regions for the tenant\ninclusive of the set default region"
        }
      }
    },
    "apiMySessionInfo": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "title": "session id"
        },
        "started": {
          "type": "string",
          "format": "int64",
          "title": "start time"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access time"
        },
        "ip": {
          "type": "string",
          "title": "incoming client ip"
        }
      },
      "title": "my session information"
    },
    "apiMySessionsGetResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMySessionInfo"
          }
        }
      },
      "title": "my sessions get response"
    },
    "apiMySessionsLogoutReq": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      },
      "title": "logout session request"
    },
    "apiMySessionsLogoutResp": {
      "type": "object",
      "title": "session logout empty response"
    },
    "apiOrgUnitCreateReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "display name for the org unit"
        },
        "desc": {
          "type": "string",
          "title": "org unit description"
        }
      },
      "title": "request for creation of new org unit"
    },
    "apiOrgUnitCreateResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the org unit created"
        }
      },
      "title": "response for creation of new org unit"
    },
    "apiOrgUnitDeleteResp": {
      "type": "object"
    },
    "apiOrgUnitGetResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "org unit id"
        },
        "name": {
          "type": "string",
          "title": "org unit display name"
        },
        "desc": {
          "type": "string",
          "title": "org unit description"
        },
        "createdBy": {
          "type": "string",
          "title": "created by"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "create time"
        }
      }
    },
    "apiOrgUnitRolesListEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "role name, unique in an Org Unit"
        },
        "desc": {
          "type": "string",
          "title": "role description, provding details about the role"
        }
      }
    },
    "apiOrgUnitRolesListResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOrgUnitRolesListEntry"
          },
          "title": "list of roles available as part of the response"
        }
      },
      "description": "eventually if we start working with longer list of roles\n keep first index for count to provide pagination\n int32 count = 1;",
      "title": "org unit roles list response"
    },
    "apiOrgUnitUpdateResp": {
      "type": "object"
    },
    "apiOrgUnitUserAddResp": {
      "type": "object",
      "title": "org unit user role add response"
    },
    "apiOrgUnitUserDeleteResp": {
      "type": "object",
      "title": "org unit user role delete response"
    },
    "apiOrgUnitUserListEntry": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username"
        },
        "firstname": {
          "type": "string",
          "title": "first name of the user"
        },
        "lastname": {
          "type": "string",
          "title": "last name of the user"
        },
        "role": {
          "type": "string",
          "title": "role associated with the user"
        }
      },
      "title": "Org unit user list entry"
    },
    "apiOrgUnitUserUpdateResp": {
      "type": "object",
      "title": "org unit user role update response"
    },
    "apiOrgUnitUsersListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "count of the users in the ou"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOrgUnitUserListEntry"
          },
          "title": "list of users as part of current response"
        }
      },
      "title": "response to the list org unit users request"
    },
    "apiOrgUnitsListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "org unit id"
        },
        "name": {
          "type": "string",
          "title": "org unit display name"
        },
        "desc": {
          "type": "string",
          "title": "org unit description"
        },
        "createdBy": {
          "type": "string",
          "title": "created by"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "create time"
        }
      }
    },
    "apiOrgUnitsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "count of Org units available"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOrgUnitsListEntry"
          },
          "title": "list of org unit info in response"
        }
      },
      "title": "list org units response"
    },
    "apiRegisterOtpReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "email of the user registering"
        },
        "firstName": {
          "type": "string",
          "title": "first name of the user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the user"
        }
      },
      "title": "register OTP request message\nFirst Name, Last Name and email are mandatory for sending OTP\nand it has to match while submitting registeration request"
    },
    "apiRegisterOtpResp": {
      "type": "object"
    },
    "apiResourceEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the resource"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "available verbs"
        }
      },
      "title": "Resource entry"
    },
    "apiResourceGetResp": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiResourceEntry"
          }
        }
      },
      "title": "resource get response"
    },
    "apiSessionLimitBehavior": {
      "type": "string",
      "enum": [
        "DENY",
        "TERMINATE"
      ],
      "default": "DENY",
      "description": "- DENY: deny new session (reject login)\n - TERMINATE: terminate oldest session to allow new login",
      "title": "behavior when session limit is exceeded"
    },
    "apiTenantAdminCreateConfig": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "tenant admin user id"
        },
        "password": {
          "type": "string",
          "title": "temporary password"
        }
      },
      "title": "tenant admin create time config"
    },
    "apiTenantCreateReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "tenant ID"
        },
        "dispName": {
          "type": "string",
          "title": "tenant Display name"
        },
        "desc": {
          "type": "string",
          "title": "tenant description"
        },
        "admin": {
          "$ref": "#/definitions/apiTenantAdminCreateConfig",
          "title": "default admin config"
        }
      },
      "title": "tenant create request"
    },
    "apiTenantCreateResp": {
      "type": "object",
      "title": "tenant create response"
    },
    "apiTenantGetResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "tenant id or realm name"
        },
        "dispName": {
          "type": "string",
          "title": "display name"
        },
        "desc": {
          "type": "string",
          "title": "descriptive information for the tenant"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        },
        "admin": {
          "type": "string",
          "title": "default tenant admin"
        }
      },
      "title": "tenant get response"
    },
    "apiTenantListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "tenant id or realm name"
        },
        "dispName": {
          "type": "string",
          "title": "display name"
        },
        "desc": {
          "type": "string",
          "title": "descriptive information for the tenant"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        }
      },
      "title": "tenant information for the list entry"
    },
    "apiTenantUserCreateResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        }
      },
      "title": "response to user create request"
    },
    "apiTenantUserCreateUserBody": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "user ID"
        },
        "email": {
          "type": "string",
          "title": "email address of the user"
        },
        "firstname": {
          "type": "string",
          "title": "first name of the user"
        },
        "lastname": {
          "type": "string",
          "title": "last name of the user"
        },
        "disabled": {
          "type": "boolean",
          "title": "if the user needs to be created disabled"
        },
        "password": {
          "type": "string",
          "title": "temporary first login password to be set for the user"
        }
      },
      "title": "user create request message"
    },
    "apiTenantUserDeleteResp": {
      "type": "object",
      "title": "response to the user delete message"
    },
    "apiTenantUserDisableResp": {
      "type": "object",
      "title": "disable user request response"
    },
    "apiTenantUserEnableResp": {
      "type": "object",
      "title": "enable user request response"
    },
    "apiTenantUserGetResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access by the user"
        }
      },
      "title": "get user response"
    },
    "apiTenantUserListEntry": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access by the user"
        }
      },
      "title": "user information for the list entry"
    },
    "apiTenantUserLogoutUserSessionBody": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "title": "specific session id if any needs to be logged out\noptional, if not specified all sessions are logged out"
        }
      },
      "title": "user session logout request"
    },
    "apiTenantUserOrgUnitWithRoles": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "org unit id"
        },
        "name": {
          "type": "string",
          "title": "org unit display name"
        },
        "role": {
          "type": "string",
          "title": "current user's role in this org unit"
        }
      },
      "title": "org unit entry with user roles"
    },
    "apiTenantUserOrgUnitsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "total count of org units"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTenantUserOrgUnitWithRoles"
          },
          "title": "list of org units with their user roles"
        }
      },
      "title": "response for listing org units with user roles"
    },
    "apiTenantUserSessionInfo": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "user name"
        },
        "sessionId": {
          "type": "string",
          "title": "session id"
        },
        "started": {
          "type": "string",
          "format": "int64",
          "title": "start time"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access time"
        },
        "ip": {
          "type": "string",
          "title": "incoming client ip"
        }
      },
      "title": "user session information"
    },
    "apiTenantUserSessionLogoutResp": {
      "type": "object",
      "title": "user session logout response"
    },
    "apiTenantUserSessionsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "total number of active sessions"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTenantUserSessionInfo"
          },
          "title": "list of active sessions"
        }
      },
      "title": "response of list active sessions"
    },
    "apiTenantUserUpdateResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        }
      },
      "title": "response to user update request"
    },
    "apiTenantUsersListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "number of users in the tenant"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTenantUserListEntry"
          },
          "title": "items - list of users"
        }
      },
      "title": "Response to the list of users in a tenant"
    },
    "apiTenantsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "count of list of tenants"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTenantListEntry"
          },
          "title": "list of items"
        }
      },
      "title": "tenant list response"
    },
    "apiUserCreateReq": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "user ID"
        },
        "email": {
          "type": "string",
          "title": "email address of the user"
        },
        "firstname": {
          "type": "string",
          "title": "first name of the user"
        },
        "lastname": {
          "type": "string",
          "title": "last name of the user"
        },
        "disabled": {
          "type": "boolean",
          "title": "if the user needs to be created disabled"
        },
        "password": {
          "type": "string",
          "title": "temporary first login password to be set for the user"
        }
      },
      "title": "user create request message"
    },
    "apiUserCreateResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        }
      },
      "title": "response to user create request"
    },
    "apiUserDeleteResp": {
      "type": "object",
      "title": "response to the user delete message"
    },
    "apiUserDisableResp": {
      "type": "object",
      "title": "disable user request response"
    },
    "apiUserEnableResp": {
      "type": "object",
      "title": "enable user request response"
    },
    "apiUserGetResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access by the user"
        }
      },
      "title": "get user response"
    },
    "apiUserListEntry": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        },
        "created": {
          "type": "string",
          "format": "int64",
          "title": "created since"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access by the user"
        }
      },
      "title": "user information for the list entry"
    },
    "apiUserLogoutUserSessionBody": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "title": "specific session id if any needs to be logged out\noptional, if not specified all sessions are logged out"
        }
      },
      "title": "user session logout request"
    },
    "apiUserOrgUnitWithRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "org unit id"
        },
        "name": {
          "type": "string",
          "title": "org unit display name"
        },
        "role": {
          "type": "string",
          "title": "current user's role in this org unit"
        }
      },
      "title": "org unit entry with the current user's role"
    },
    "apiUserOrgUnitsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "total count of org units the user belongs to"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserOrgUnitWithRole"
          },
          "title": "list of org units with the user's roles"
        }
      },
      "title": "response for listing org units with user's roles"
    },
    "apiUserSessionInfo": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "user name"
        },
        "sessionId": {
          "type": "string",
          "title": "session id"
        },
        "started": {
          "type": "string",
          "format": "int64",
          "title": "start time"
        },
        "lastAccess": {
          "type": "string",
          "format": "int64",
          "title": "last access time"
        },
        "ip": {
          "type": "string",
          "title": "incoming client ip"
        }
      },
      "title": "user session information"
    },
    "apiUserSessionLogoutResp": {
      "type": "object",
      "title": "user session logout response"
    },
    "apiUserSessionsListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "total number of active sessions"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserSessionInfo"
          },
          "title": "list of active sessions"
        }
      },
      "title": "response of list active sessions"
    },
    "apiUserUpdateResp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "username or user id"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "firstName": {
          "type": "string",
          "title": "first name of user"
        },
        "lastName": {
          "type": "string",
          "title": "last name of user"
        },
        "enabled": {
          "type": "boolean",
          "title": "is user enabled"
        }
      },
      "title": "response to user update request"
    },
    "apiUsersListResp": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "number of users in the tenant"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserListEntry"
          },
          "title": "items - list of users"
        }
      },
      "title": "Response to the list of users in a tenant"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  },
  "externalDocs": {
    "description": "Auth Gateway API Specification - sample descriptive information"
  }
}
