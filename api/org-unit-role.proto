// Copyright Â© 2025 Prabhjot Singh Sethi, All Rights reserved
// Author: Prabhjot Singh Sethi <prabhjot.sethi@gmail.com>

syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "coreapis/api/role.proto";

option go_package = "github.com/go-core-stack/auth-gateway/api";

// Service provided to manage org unit roles
service OrgUnitRole {
  // Get List of available org unit roles (both built-in and custom), for specific organisation
  rpc ListOrgUnitRoles(OrgUnitRolesListReq) returns (OrgUnitRolesListResp) {
    option (google.api.http) = {
      get: "/api/auth/v1/ou/{ou}/roles"
    };
    option (api.role) = {
      resource: "org-unit-role"
      scope: "ou"
      verb: "list"
    };
  }

  // Create a new custom role for the organization unit
  rpc CreateCustomRole(CreateCustomRoleReq) returns (CreateCustomRoleResp) {
    option (google.api.http) = {
      post: "/api/auth/v1/ou/{ou}/role"
      body: "*"
    };
    option (api.role) = {
      resource: "org-unit-custom-role"
      scope: "ou"
      verb: "create"
    };
  }

  // Update an existing custom role for the organization unit
  rpc UpdateCustomRole(UpdateCustomRoleReq) returns (UpdateCustomRoleResp) {
    option (google.api.http) = {
      put: "/api/auth/v1/ou/{ou}/role/{name}"
      body: "*"
    };
    option (api.role) = {
      resource: "org-unit-custom-role"
      scope: "ou"
      verb: "update"
    };
  }

  // Get details of a specific custom role
  rpc GetCustomRole(GetCustomRoleReq) returns (GetCustomRoleResp) {
    option (google.api.http) = {
      get: "/api/auth/v1/ou/{ou}/role/{name}"
    };
    option (api.role) = {
      resource: "org-unit-custom-role"
      scope: "ou"
      verb: "get"
    };
  }

  // Delete (soft delete) a custom role from the organization unit
  rpc DeleteCustomRole(DeleteCustomRoleReq) returns (DeleteCustomRoleResp) {
    option (google.api.http) = {
      delete: "/api/auth/v1/ou/{ou}/role/{name}"
    };
    option (api.role) = {
      resource: "org-unit-custom-role"
      scope: "ou"
      verb: "delete"
    };
  }
}

// org unit roles list request
message OrgUnitRolesListReq {
  // org unit under consideration
  string ou = 1;
}

message OrgUnitRolesListEntry {
  // role name, unique in an Org Unit
  string name = 1;

  // role description, provding details about the role
  string desc = 2;

  // role type: "built-in" for system roles (admin, auditor) or "custom" for user-defined roles
  string type = 3;

  // display name for custom roles (only applicable for custom roles)
  string displayName = 4;

  // creation timestamp for custom roles (only applicable for custom roles)
  int64 created = 5;

  // user who created the role for custom roles (only applicable for custom roles)
  string createdBy = 6;
}

// org unit roles list response - includes both built-in and custom roles
message OrgUnitRolesListResp {
  // eventually if we start working with longer list of roles
  // keep first index for count to provide pagination
  // int32 count = 1;

  // list of roles available as part of the response
  repeated OrgUnitRolesListEntry items = 2;
}

// Resource matching criteria for fine-grained permission control
message ResourceMatch {
  // Matching criteria type: "exact", "prefix", "suffix", "regex", "wildcard"
  // - exact: Exact resource name match
  // - prefix: Resource name starts with the key
  // - suffix: Resource name ends with the key
  // - regex: Resource name matches the regex pattern in key
  // - wildcard: Key with * for wildcard matching (default if empty)
  string criteria = 1;

  // The matching key/pattern based on criteria
  // For wildcard: supports * (e.g., "bucket-*", "*-prod", "*")
  // For regex: valid regex pattern
  // For exact/prefix/suffix: literal string
  string key = 2;
}

// Permission definition for custom roles
message RolePermission {
  // Resource name this permission applies to
  string resource = 1;

  // Resource matching criteria (optional, defaults to wildcard with key="*")
  ResourceMatch match = 2;

  // List of allowed verbs/actions for this resource (supports "*" for all verbs)
  repeated string verbs = 3;

  // Action type: "Allow" or "Deny" (Deny takes precedence over Allow)
  string action = 4;
}

// Create custom role request
message CreateCustomRoleReq {
  // Organization unit ID
  string ou = 1;

  // Name of the custom role (must be unique within the org unit)
  string name = 2;

  // Display name for the custom role
  string displayName = 3;

  // Description explaining the purpose of this custom role
  string description = 4;

  // List of permissions granted by this custom role
  repeated RolePermission permissions = 5;
}

// Create custom role response
message CreateCustomRoleResp {
  // Confirmation message
  string message = 1;
}

// Update custom role request
message UpdateCustomRoleReq {
  // Organization unit ID
  string ou = 1;

  // Name of the custom role to update
  string name = 2;

  // Updated display name for the custom role
  string displayName = 3;

  // Updated description explaining the purpose of this custom role
  string description = 4;

  // Updated list of permissions granted by this custom role
  repeated RolePermission permissions = 5;
}

// Update custom role response
message UpdateCustomRoleResp {
  // Confirmation message
  string message = 1;
}

// Get custom role request
message GetCustomRoleReq {
  // Organization unit ID
  string ou = 1;

  // Name of the custom role to retrieve
  string name = 2;
}

// Get custom role response
message GetCustomRoleResp {
  // Name of the custom role
  string name = 1;

  // Display name for the custom role
  string displayName = 2;

  // Description explaining the purpose of this custom role
  string description = 3;

  // List of permissions granted by this custom role
  repeated RolePermission permissions = 4;

  // Timestamp when the role was created
  int64 created = 5;

  // User who created this custom role
  string createdBy = 6;

  // Timestamp when the role was last updated
  int64 updated = 7;

  // User who last updated this custom role
  string updatedBy = 8;
}

// Delete custom role request
message DeleteCustomRoleReq {
  // Organization unit ID
  string ou = 1;

  // Name of the custom role to delete
  string name = 2;
}

// Delete custom role response
message DeleteCustomRoleResp {
  // Confirmation message
  string message = 1;
}
