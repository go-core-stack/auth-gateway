// Copyright Â© 2025 Prabhjot Singh Sethi, All Rights reserved
// Author: Prabhjot Singh Sethi <prabhjot.sethi@gmail.com>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: mytenant.proto

package api

import (
	_ "github.com/go-core-stack/grpc-core/coreapis/api"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// password policy get request
type MyPasswordPolicyGetReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyPasswordPolicyGetReq) Reset() {
	*x = MyPasswordPolicyGetReq{}
	mi := &file_mytenant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyPasswordPolicyGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPasswordPolicyGetReq) ProtoMessage() {}

func (x *MyPasswordPolicyGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_mytenant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPasswordPolicyGetReq.ProtoReflect.Descriptor instead.
func (*MyPasswordPolicyGetReq) Descriptor() ([]byte, []int) {
	return file_mytenant_proto_rawDescGZIP(), []int{0}
}

// password policy get response
type MyPasswordPolicyGetResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// minimum number of lower case characters in password
	MinLower int32 `protobuf:"varint,1,opt,name=minLower,proto3" json:"minLower,omitempty"`
	// minimum number of upper case characters in password
	MinUpper int32 `protobuf:"varint,2,opt,name=minUpper,proto3" json:"minUpper,omitempty"`
	// minimum number of digits in password
	MinDigits int32 `protobuf:"varint,3,opt,name=minDigits,proto3" json:"minDigits,omitempty"`
	// minimum number of special characters in password
	MinSpecial int32 `protobuf:"varint,4,opt,name=minSpecial,proto3" json:"minSpecial,omitempty"`
	// minimum length of password
	MinLength int32 `protobuf:"varint,5,opt,name=minLength,proto3" json:"minLength,omitempty"`
	// maximum length of password
	MaxLength int32 `protobuf:"varint,6,opt,name=maxLength,proto3" json:"maxLength,omitempty"`
	// do not allow last x recently used passwords
	RecentlyUsed int32 `protobuf:"varint,7,opt,name=recentlyUsed,proto3" json:"recentlyUsed,omitempty"`
	// is username allowed as password
	AllowUsername bool `protobuf:"varint,8,opt,name=allowUsername,proto3" json:"allowUsername,omitempty"`
	// is email allowed as password
	AllowEmail    bool `protobuf:"varint,9,opt,name=allowEmail,proto3" json:"allowEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyPasswordPolicyGetResp) Reset() {
	*x = MyPasswordPolicyGetResp{}
	mi := &file_mytenant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyPasswordPolicyGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPasswordPolicyGetResp) ProtoMessage() {}

func (x *MyPasswordPolicyGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_mytenant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPasswordPolicyGetResp.ProtoReflect.Descriptor instead.
func (*MyPasswordPolicyGetResp) Descriptor() ([]byte, []int) {
	return file_mytenant_proto_rawDescGZIP(), []int{1}
}

func (x *MyPasswordPolicyGetResp) GetMinLower() int32 {
	if x != nil {
		return x.MinLower
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetMinUpper() int32 {
	if x != nil {
		return x.MinUpper
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetMinDigits() int32 {
	if x != nil {
		return x.MinDigits
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetMinSpecial() int32 {
	if x != nil {
		return x.MinSpecial
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetRecentlyUsed() int32 {
	if x != nil {
		return x.RecentlyUsed
	}
	return 0
}

func (x *MyPasswordPolicyGetResp) GetAllowUsername() bool {
	if x != nil {
		return x.AllowUsername
	}
	return false
}

func (x *MyPasswordPolicyGetResp) GetAllowEmail() bool {
	if x != nil {
		return x.AllowEmail
	}
	return false
}

// password policy update request
type MyPasswordPolicyUpdateReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// minimum number of lower case characters in password
	MinLower int32 `protobuf:"varint,1,opt,name=minLower,proto3" json:"minLower,omitempty"`
	// minimum number of upper case characters in password
	MinUpper int32 `protobuf:"varint,2,opt,name=minUpper,proto3" json:"minUpper,omitempty"`
	// minimum number of digits in password
	MinDigits int32 `protobuf:"varint,3,opt,name=minDigits,proto3" json:"minDigits,omitempty"`
	// minimum number of special characters in password
	MinSpecial int32 `protobuf:"varint,4,opt,name=minSpecial,proto3" json:"minSpecial,omitempty"`
	// minimum length of password
	MinLength int32 `protobuf:"varint,5,opt,name=minLength,proto3" json:"minLength,omitempty"`
	// maximum length of password
	MaxLength int32 `protobuf:"varint,6,opt,name=maxLength,proto3" json:"maxLength,omitempty"`
	// do not allow last x recently used passwords
	RecentlyUsed int32 `protobuf:"varint,7,opt,name=recentlyUsed,proto3" json:"recentlyUsed,omitempty"`
	// is username allowed as password
	AllowUsername bool `protobuf:"varint,8,opt,name=allowUsername,proto3" json:"allowUsername,omitempty"`
	// is email allowed as password
	AllowEmail    bool `protobuf:"varint,9,opt,name=allowEmail,proto3" json:"allowEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyPasswordPolicyUpdateReq) Reset() {
	*x = MyPasswordPolicyUpdateReq{}
	mi := &file_mytenant_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyPasswordPolicyUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPasswordPolicyUpdateReq) ProtoMessage() {}

func (x *MyPasswordPolicyUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mytenant_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPasswordPolicyUpdateReq.ProtoReflect.Descriptor instead.
func (*MyPasswordPolicyUpdateReq) Descriptor() ([]byte, []int) {
	return file_mytenant_proto_rawDescGZIP(), []int{2}
}

func (x *MyPasswordPolicyUpdateReq) GetMinLower() int32 {
	if x != nil {
		return x.MinLower
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetMinUpper() int32 {
	if x != nil {
		return x.MinUpper
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetMinDigits() int32 {
	if x != nil {
		return x.MinDigits
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetMinSpecial() int32 {
	if x != nil {
		return x.MinSpecial
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetRecentlyUsed() int32 {
	if x != nil {
		return x.RecentlyUsed
	}
	return 0
}

func (x *MyPasswordPolicyUpdateReq) GetAllowUsername() bool {
	if x != nil {
		return x.AllowUsername
	}
	return false
}

func (x *MyPasswordPolicyUpdateReq) GetAllowEmail() bool {
	if x != nil {
		return x.AllowEmail
	}
	return false
}

// password policy update response
type MyPasswordPolicyUpdateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyPasswordPolicyUpdateResp) Reset() {
	*x = MyPasswordPolicyUpdateResp{}
	mi := &file_mytenant_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyPasswordPolicyUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPasswordPolicyUpdateResp) ProtoMessage() {}

func (x *MyPasswordPolicyUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mytenant_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPasswordPolicyUpdateResp.ProtoReflect.Descriptor instead.
func (*MyPasswordPolicyUpdateResp) Descriptor() ([]byte, []int) {
	return file_mytenant_proto_rawDescGZIP(), []int{3}
}

var File_mytenant_proto protoreflect.FileDescriptor

const file_mytenant_proto_rawDesc = "" +
	"\n" +
	"\x0emytenant.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a\x17coreapis/api/role.proto\"\x18\n" +
	"\x16MyPasswordPolicyGetReq\"\xb5\x02\n" +
	"\x17MyPasswordPolicyGetResp\x12\x1a\n" +
	"\bminLower\x18\x01 \x01(\x05R\bminLower\x12\x1a\n" +
	"\bminUpper\x18\x02 \x01(\x05R\bminUpper\x12\x1c\n" +
	"\tminDigits\x18\x03 \x01(\x05R\tminDigits\x12\x1e\n" +
	"\n" +
	"minSpecial\x18\x04 \x01(\x05R\n" +
	"minSpecial\x12\x1c\n" +
	"\tminLength\x18\x05 \x01(\x05R\tminLength\x12\x1c\n" +
	"\tmaxLength\x18\x06 \x01(\x05R\tmaxLength\x12\"\n" +
	"\frecentlyUsed\x18\a \x01(\x05R\frecentlyUsed\x12$\n" +
	"\rallowUsername\x18\b \x01(\bR\rallowUsername\x12\x1e\n" +
	"\n" +
	"allowEmail\x18\t \x01(\bR\n" +
	"allowEmail\"\xb7\x02\n" +
	"\x19MyPasswordPolicyUpdateReq\x12\x1a\n" +
	"\bminLower\x18\x01 \x01(\x05R\bminLower\x12\x1a\n" +
	"\bminUpper\x18\x02 \x01(\x05R\bminUpper\x12\x1c\n" +
	"\tminDigits\x18\x03 \x01(\x05R\tminDigits\x12\x1e\n" +
	"\n" +
	"minSpecial\x18\x04 \x01(\x05R\n" +
	"minSpecial\x12\x1c\n" +
	"\tminLength\x18\x05 \x01(\x05R\tminLength\x12\x1c\n" +
	"\tmaxLength\x18\x06 \x01(\x05R\tmaxLength\x12\"\n" +
	"\frecentlyUsed\x18\a \x01(\x05R\frecentlyUsed\x12$\n" +
	"\rallowUsername\x18\b \x01(\bR\rallowUsername\x12\x1e\n" +
	"\n" +
	"allowEmail\x18\t \x01(\bR\n" +
	"allowEmail\"\x1c\n" +
	"\x1aMyPasswordPolicyUpdateResp2\xc7\x02\n" +
	"\bMyTenant\x12\x94\x01\n" +
	"\x13GetMyPasswordPolicy\x12\x1b.api.MyPasswordPolicyGetReq\x1a\x1c.api.MyPasswordPolicyGetResp\"B\x8a\xb5\x18\x16\n" +
	"\x0fpassword-policy\x1a\x03get\x82\xd3\xe4\x93\x02\"\x12 /api/mytenant/v1/password-policy\x12\xa3\x01\n" +
	"\x16UpdateMyPasswordPolicy\x12\x1e.api.MyPasswordPolicyUpdateReq\x1a\x1f.api.MyPasswordPolicyUpdateResp\"H\x8a\xb5\x18\x19\n" +
	"\x0fpassword-policy\x1a\x06update\x82\xd3\xe4\x93\x02%:\x01*\x1a /api/mytenant/v1/password-policyB+Z)github.com/go-core-stack/auth-gateway/apib\x06proto3"

var (
	file_mytenant_proto_rawDescOnce sync.Once
	file_mytenant_proto_rawDescData []byte
)

func file_mytenant_proto_rawDescGZIP() []byte {
	file_mytenant_proto_rawDescOnce.Do(func() {
		file_mytenant_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mytenant_proto_rawDesc), len(file_mytenant_proto_rawDesc)))
	})
	return file_mytenant_proto_rawDescData
}

var file_mytenant_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mytenant_proto_goTypes = []any{
	(*MyPasswordPolicyGetReq)(nil),     // 0: api.MyPasswordPolicyGetReq
	(*MyPasswordPolicyGetResp)(nil),    // 1: api.MyPasswordPolicyGetResp
	(*MyPasswordPolicyUpdateReq)(nil),  // 2: api.MyPasswordPolicyUpdateReq
	(*MyPasswordPolicyUpdateResp)(nil), // 3: api.MyPasswordPolicyUpdateResp
}
var file_mytenant_proto_depIdxs = []int32{
	0, // 0: api.MyTenant.GetMyPasswordPolicy:input_type -> api.MyPasswordPolicyGetReq
	2, // 1: api.MyTenant.UpdateMyPasswordPolicy:input_type -> api.MyPasswordPolicyUpdateReq
	1, // 2: api.MyTenant.GetMyPasswordPolicy:output_type -> api.MyPasswordPolicyGetResp
	3, // 3: api.MyTenant.UpdateMyPasswordPolicy:output_type -> api.MyPasswordPolicyUpdateResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mytenant_proto_init() }
func file_mytenant_proto_init() {
	if File_mytenant_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mytenant_proto_rawDesc), len(file_mytenant_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mytenant_proto_goTypes,
		DependencyIndexes: file_mytenant_proto_depIdxs,
		MessageInfos:      file_mytenant_proto_msgTypes,
	}.Build()
	File_mytenant_proto = out.File
	file_mytenant_proto_goTypes = nil
	file_mytenant_proto_depIdxs = nil
}
