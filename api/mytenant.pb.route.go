// Code generated by protoc-gen-routes. DO NOT EDIT.
// source: mytenant.proto

package api

import "github.com/go-core-stack/auth/model"

var RoutesMyTenant = []*model.Route{}

func init() {
	var route *model.Route

	// Adding Route information for GetMyPasswordPolicy RPC
	route = model.NewRoute("/api/mytenant/v1/password-policy", "GET")
	route.Resource = "password-policy"
	route.Verb = "get"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for UpdateMyPasswordPolicy RPC
	route = model.NewRoute("/api/mytenant/v1/password-policy", "PUT")
	route.Resource = "password-policy"
	route.Verb = "update"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for GetMyIdentityProviderTypes RPC
	route = model.NewRoute("/api/mytenant/v1/identity-provider-types", "GET")
	route.Resource = "tenant-idp"
	route.Verb = "list-types"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for CreateMyIdentityProvider RPC
	route = model.NewRoute("/api/mytenant/v1/identity-provider", "POST")
	route.Resource = "tenant-idp"
	route.Verb = "create"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for ListMyIdentityProviders RPC
	route = model.NewRoute("/api/mytenant/v1/identity-providers", "GET")
	route.Resource = "tenant-idp"
	route.Verb = "list"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for GetMyIdentityProvider RPC
	route = model.NewRoute("/api/mytenant/v1/identity-provider/{key}", "GET")
	route.Resource = "tenant-idp"
	route.Verb = "get"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for UpdateMyIdentityProvider RPC
	route = model.NewRoute("/api/mytenant/v1/identity-provider/{key}", "PUT")
	route.Resource = "tenant-idp"
	route.Verb = "update"
	RoutesMyTenant = append(RoutesMyTenant, route)

	// Adding Route information for DeleteMyIdentityProvider RPC
	route = model.NewRoute("/api/mytenant/v1/identity-provider/{key}", "DELETE")
	route.Resource = "tenant-idp"
	route.Verb = "delete"
	RoutesMyTenant = append(RoutesMyTenant, route)
}
